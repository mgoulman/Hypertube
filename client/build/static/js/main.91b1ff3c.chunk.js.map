{"version":3,"sources":["image/404.png","components/NavBar/index.js","containers/Navbar/index.js","actions/logoutAction.js","components/Footer/index.js","components/commun/TextField.js","components/commun/flash.js","components/Register/index.js","actions/registerAction.js","containers/Register/index.js","components/Login/index.js","containers/Login/index.js","actions/loginAction.js","components/NotFoundPage/index.js","actions/resetPasswordAction.js","components/SendEmail/index.js","containers/sendEmail/index.js","components/emailConfirmation/index.js","containers/emailConfirmation/index.js","components/resetPassword/index.js","containers/resetPassword/index.js","components/Home/index.js","actions/moviesAction.js","containers/Home/index.js","Routes/Routes.js","App.js","serviceWorker.js","sagas/registerSaga.js","actions/resetStateAction.js","actions/userAction.js","sagas/helper.js","sagas/loginSaga.js","sagas/logoutSaga.js","sagas/resetPasswordSaga.js","sagas/moviesSaga.js","sagas/index.js","reducers/registerReducer.js","reducers/loginReducer.js","reducers/resetPasswordReducer.js","reducers/userReducer.js","reducers/moviesReducer.js","reducers/index.js","store.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","display","marginBottom","spacing","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","backgroundColor","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","title","flexGrow","notif","margin","NavBar","props","user","handleLogout","loggedInMenu","icon","color","loggedOutMenu","menu","token","classes","useTheme","React","useState","open","setOpen","ClickAwayListener","onClickAway","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","aria-label","onClick","edge","Typography","variant","to","style","textDecoration","Button","Drawer","anchor","paper","direction","Divider","List","map","item","path","key","text","ListItem","button","ListItemIcon","ListItemText","primary","mapDispatchToProps","connect","state","stateProps","dispatchProps","otherProps","logoutAction","borderTop","textAlign","left","bottom","height","phantom","Copyright","align","href","Date","getFullYear","Footer","renderField","input","label","meta","touched","error","custom","TextField","helperText","fullWidth","MyFlash","msg","enqueueSnackbar","useSnackbar","useEffect","forEach","element","Snackbar","anchorOrigin","vertical","horizontal","marginTop","autoHideDuration","maxSnack","flexDirection","form","submit","palette","secondary","main","avatar","Register","handleSubmit","status","err","Container","component","maxWidth","Avatar","Grid","container","xs","sm","Field","name","type","rows","value","justify","CircularProgress","inscriptionUserSuccess","data","inscriptionError","dataInsc","connectedRegisterContainer","register","registerStatus","registerAction","RegisterContainer","reduxForm","validate","values","errors","field","trim","username","test","email","password","confirmPassword","Login","registredStatus","connectedLoginContainer","login","loginAction","LoginContainer","NotFoundPage","src","img","alt","SendEmailError","ResetPasswordError","ForgotPassword","cnForgotPasswordContainer","resetPassword","sendEmail","ForgotPasswordContainer","EmailConfirmation","EmailConfirmCont","componentDidMount","match","params","emailConfirm","this","Component","emailConfirmation","ResetPassword","resetPasswordStatus","resetError","connectedResetPasswordContainer","resetPasswordAction","ResetPasswordContainer","upBtn","zIndex","right","rating","Home","movies","filter","setFilter","search","setSearch","Tooltip","fontSize","alignContent","placeholder","CardContent","id","gutterBottom","Slider","valueLabelDisplay","aria-labelledby","step","min","max","isClearable","options","Fab","size","document","documentElement","scrollTop","index","Fragment","medium_cover_image","images","poster","Card","split","title_long","year","fill","percentage","toFixed","GetMoviesSuccess","GetMoviesError","indice","getMovies","page","setPage","window","onscroll","ev","innerHeight","scrollY","body","offsetHeight","exact","loginContainer","HomeContainer","App","Boolean","location","hostname","inscription","axios","post","response","isValid","put","push","errUsername","errEmail","delay","takeLatest","updateUserSuccess","request","config","call","socket","emit","errorField","logoutRequest","console","log","resetPass","pass","c_pass","reset","sendEmailS","sent","length","select","oldData","newData","concat","all","fork","registerSaga","loginSaga","logoutSaga","resetPasswordSaga","moviesSaga","action","DEFAULT_STATE","combinedReducer","history","combineReducers","connectRouter","registerReducer","loginReducer","resetPasswordReducer","userReducer","moviesReducer","createBrowserHistory","sagaMiddleware","createSagaMiddleware","persistConfig","storage","whitelist","persistedReducer","persistReducer","rootReducer","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","routerMiddleware","run","rootSaga","configureStore","persistor","persistStore","ReactDOM","render","loading","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.91b1ff3c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/404.45648724.png\";","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {Link} from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport AppsIcon from '@material-ui/icons/Apps';\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'relative',\n    marginBottom: theme.spacing(10),\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n     \n    }),\n    backgroundColor:\"#FFFFFF\"\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    \n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  title : {\n    flexGrow: 1,\n  },\n  notif: {\n    margin: 'auto'\n  },\n \n}));\n\nfunction NavBar(props) {\n  const {user, handleLogout} = props;\n\n  const loggedInMenu = [\n    {\"text\" : \"Home\",\"path\" : \"/\", icon: <AppsIcon color=\"secondary\"/>},\n  ];\n  const loggedOutMenu = [\n    {\"text\" : \"Se connecter\",\"path\" : \"/login\", icon: <LockOpenIcon color=\"inherit\"/>},\n    {\"text\" : \"inscription\",\"path\" : \"/register\", icon: <LockOpenIcon color=\"inherit\"/>},\n  ];\n  let menu = [];\n  if(user && user.token)\n  {\n      menu = loggedInMenu;\n  }\n  else\n    menu = loggedOutMenu;\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const handleClickAway = () => {\n    setOpen(false);\n  };\n\n  return (\n    <ClickAwayListener onClickAway={handleClickAway}>\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n        \n      >\n        <Toolbar>\n          <IconButton\n            color=\"primary\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          \n          <Typography variant=\"h6\"  color=\"primary\" className={classes.title}>\n              <Link to=\"/\" style={{textDecoration: 'none', color:'inherit'}}>\n                HYPERTUBE\n              </Link>\n             \n          </Typography>\n          \n          {user && user.token && <Button color=\"primary\" onClick={handleLogout}>Logout</Button>}\n        </Toolbar>\n      </AppBar>\n      \n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon color=\"primary\"/> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {menu.map((item) => (\n            <Link to={item.path} style={{textDecoration: 'none', color:'primary'}} key={item.text}>\n              <ListItem button>\n              <ListItemIcon>{item.icon}</ListItemIcon>\n                <ListItemText primary={item.text} />\n              </ListItem>\n            </Link>\n          ))}\n        </List>\n      </Drawer>\n    </div>\n    </ClickAwayListener>\n  );\n}\n\nexport default NavBar;","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {LogoutAction} from '../../actions/logoutAction';\nimport NavBar from '../../components/NavBar';\n\nconst NavBarContainer = (props) => {\n    const {user, handleLogout} = props;\n    return(\n        <>\n            <NavBar handleLogout={handleLogout} user={user} />\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => (\n{\n    \"user\" : state.user,\n});\nconst mapDispatchToProps = {\n    \"logoutAction\": LogoutAction,\n};\nconst mergeProps = (stateProps, dispatchProps, otherProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    ...otherProps,\n    \"handleLogout\" : () => {\n        dispatchProps.logoutAction();\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(NavBarContainer);\n ","export const LOGOUT_USER = \"LOGOUT_USER\";\n\nexport const CLEAR_USER_INFORMATION = \"CLEAR_USER_INFORMATION\";\n\nexport const LogoutAction = () => ({\n    \"type\": LOGOUT_USER\n});\n\nexport const ClearUserInformation = () => ({\n    \"type\": CLEAR_USER_INFORMATION\n});","import React from 'react';\nimport Hink from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\n\nvar style = {\n  backgroundColor: \"#FFFFFF\",\n  borderTop: \"3px solid #E7E7E7\",\n  textAlign: \"center\",\n  padding: \"20px\",\n  position: \"fixed\",\n  left: \"0\",\n  bottom: \"0\",\n  height: \"60px\",\n  width: \"100%\",\n}\n\nvar phantom = {\n  display: 'block',\n  padding: '20px',\n  height: '60px',\n  width: '100%',\n}\n\nconst Copyright = () => {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n          {'Copyright © '}\n          <Hink color=\"inherit\" href=\"#\">\n            HYPERTUBE\n          </Hink>{' '}\n          {new Date().getFullYear()}\n          {'.'}\n        </Typography>\n    );\n}\n\nconst Footer = () => {\n  return(\n    <div>\n      <div style={phantom}/>\n      <div style={style}>\n        <Copyright />\n      </div>  \n    </div>      \n  );\n}\n\nexport default Footer;","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\n\nconst renderField = ({\n    input,\n    label,\n    meta: { touched, error },\n    ...custom\n  }) => (\n    <TextField\n    label = {label}\n    helperText={touched && error}\n    error={touched && (error ? true : false)}\n    variant=\"outlined\"\n    fullWidth\n    {...input}\n    {...custom}\n    />\n  );\nexport default renderField","import React, {useEffect} from \"react\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\n\nfunction MyFlash(props) {\n    const {msg, variant} = props;\n    const { enqueueSnackbar } = useSnackbar();\n    useEffect(() => {\n        if(msg && variant)\n            msg.forEach(element => {\n                enqueueSnackbar(element, { variant: variant });\n            });\n    }, [])\n    return(<></>);\n}\n\nexport default function Snackbar(props){\n    return(\n        <SnackbarProvider\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            style={{marginTop: '49px'}}\n            autoHideDuration={4000}\n            maxSnack={5}\n        >\n            <MyFlash msg={props.msg} variant={props.variant}/>\n        </SnackbarProvider>\n    );\n};","import React  from 'react';\nimport { Field} from 'redux-form';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Avatar from '@material-ui/core/Avatar';\nimport LockRoundedIcon from '@material-ui/icons/LockRounded';\nimport {Link} from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport renderField from '../commun/TextField';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MyFlash from '../commun/flash';\n\nconst useStyles = makeStyles(theme => ({\n  \n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: theme.palette.secondary.main\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n}));\n\n\nconst Register = (props) => {\n  const {handleSubmit, status, err} = props;\n  const classes = useStyles();\n  \n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n    {status === \"error\" && <MyFlash variant=\"error\" msg={[err]}/>}\n    {status !== \"loading\" && \n    <div className={classes.paper}> \n      <Avatar className={classes.avatar}>\n            <LockRoundedIcon/>\n          </Avatar>\n        <Typography component=\"h1\" variant=\"h5\" color=\"primary\">\n          Sign up\n        </Typography>\n        <form  className={classes.form}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n            <Field\n                            name=\"firstname\"\n                            component={renderField}\n                            label=\"Firstname\"\n                            type = \"text\"\n                            rows='1'\n            />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n            <Field\n                            name=\"lastname\"\n                            component={renderField}\n                            label=\"Lastname\"\n                            type = \"text\"\n                            rows='1'\n                       />\n            </Grid>\n            <Grid item xs={12}>\n            <Field\n                            name=\"username\"\n                            component={renderField}\n                            label=\"Username\"\n                            type = \"text\"\n                            rows='1'\n                            \n                       />\n            </Grid>\n            <Grid item xs={12}>\n            <Field\n                            name=\"email\"\n                            component={renderField}\n                            label=\"Email\"\n                            type = \"email\"\n                            rows='1'\n\n                       />\n            </Grid>\n            <Grid item xs={12}>\n            <Field\n                            name=\"password\"\n                            component={renderField}\n                            label=\"Password\"\n                            type=\"password\"\n                            rows='1'\n                       />\n            </Grid>\n            <Grid item xs={12}>\n            <Field\n                            name=\"confirmPassword\"\n                            component={renderField}\n                            label=\"ConfirmPassword\"\n                            type=\"password\"\n                            rows='1'\n                       />\n            </Grid>\n            <Grid item xs={12}>\n             \n              <Button  onClick={handleSubmit} className={classes.submit} fullWidth variant=\"contained\" type=\"submit\" color=\"primary\" name=\"submit\" value=\"ok\" >Submit</Button>\n            </Grid>\n          </Grid>\n        </form>  \n          \n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link to=\"/login\" style={{textDecoration: 'none', color:'#3f51b5'}}>\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        \n      </div>}\n      {status === \"loading\" && <div className={classes.paper} style={{marginTop: \"300px\"}}><CircularProgress color=\"secondary\" /></div>}\n      \n    </Container>\n  );\n}\n\nexport default Register;\n","export const INSCRIPTION_USER = \"INSCRIPTION_USER\";\n\nexport const INSCRIPTION_USER_SUCCESS = \"INSCRIPTION_USER_SUCCESS\";\n\nexport const INSCRIPTION_USER_ERROR = \"INSCRIPTION_USER_ERROR\";\n\nexport const EMAIL_CONFIRMATION = \"EMAIL_CONFIRMATION\";\n\nexport const EMAIL_CONFIRMATION_SUCCESS = \"EMAIL_CONFIRMATION_SUCCESS\";\n\nexport const EMAIL_CONFIRMATION_ERROR = \"EMAIL_CONFIRMATION_ERROR\";\n\nexport const InscriptionAction = (dataInsc) => ({\n  \"type\": INSCRIPTION_USER,\n  \"data\": dataInsc\n});\n\nexport const inscriptionUserSuccess = (data) => ({\n    \"type\": INSCRIPTION_USER_SUCCESS,\n    data\n});\n\nexport const inscriptionError = (error) => ({\n    \"type\": INSCRIPTION_USER_ERROR,\n    error\n});\n\nexport const EmailConfirmationAction = (token) => ({\n  \"type\": EMAIL_CONFIRMATION,\n  'token': token\n});\n\nexport const EmailConfirmationSuccess = () => ({\n    \"type\": EMAIL_CONFIRMATION_SUCCESS,\n});\n\nexport const EmailConfirmationError = () => ({\n    \"type\": EMAIL_CONFIRMATION_ERROR,\n});","import Register from '../../components/Register';\nimport {InscriptionAction} from '../../actions/registerAction';\nimport {connect} from \"react-redux\";\nimport {reduxForm } from 'redux-form';\n\nconst validate = (values) => {\n    const errors = {};\n    const requiredFields = [\n        'firstname',\n        'lastname',\n        'username',\n        'email',\n        'password',\n        'confirmPassword',\n    ];\n\n    requiredFields.forEach(field => {\n        if (!values[field] || !values[field].trim()) {\n            errors[field] = 'Required !';\n        }\n    });\n\n    if(values.username && !/^[a-z0-9_-]{2,20}$/.test(values.username))\n        errors.username = 'Username can contain 2-20 characters, letters (a-z), numbers, \"_\" and \"-\"';\n    if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email))\n        errors.email = \"Invalid email address !\";\n    if(values.password && !/\\d/.test(values.password))\n        errors.password = \"Password must contain a number !\"\n    else if(values.password && !/[A-Z]/.test(values.password))\n        errors.password = \"Password must contain an uppercase letter !\"\n    else if(values.password && !/[a-z]/.test(values.password))\n        errors.password = \"Password must contain a lowercase letter !\"\n    else if(values.password && !/[ !@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]/.test(values.password))\n        errors.password = \"Password must contain a special character !\"\n    else if(values.password && !/[a-zA-Z0-9 !@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/? ]{8,20}/.test(values.password))\n        errors.password = \"Password must contain 8-20 characters !\"\n    if(values.confirmPassword && values.password !== values.confirmPassword)\n        errors.confirmPassword = \"Passwords does not match !\"\n    return errors;\n}\n\nconst mapStateToProps = (state) => (\n{\n    \"form\" : state.form,\n    \"status\" : state.register.registerStatus,\n    \"err\": state.register.error\n});\nconst mapDispatchToProps = {\n    \"registerAction\": InscriptionAction\n};\nconst mergeProps = (stateProps, dispatchProps, otherProps)=> ({\n    ...stateProps,\n    ...dispatchProps,\n    ...otherProps,\n    \"handleSubmit\" : otherProps.handleSubmit((form)=>{\n        dispatchProps.registerAction(form);\n    })\n});\n\nconst connectedRegisterContainer = connect(mapStateToProps, mapDispatchToProps,mergeProps)(Register);\nconst RegisterContainer = reduxForm({\n    form : \"register\",\n    \"destroyOnUnmount\": true,  \n    validate,\n})(connectedRegisterContainer);\n\nexport default RegisterContainer;","import React  from 'react';\nimport { Field} from 'redux-form';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Avatar from '@material-ui/core/Avatar';\nimport LockRoundedIcon from '@material-ui/icons/LockRounded';\nimport { Link } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport MyFlash from '../commun/flash'\nimport renderField from '../commun/TextField'\n\nconst useStyles = makeStyles(theme => ({\n  \n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '100%'\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: theme.palette.secondary.main\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n}));\n\nconst Login = (props) => {\n  const {handleSubmit, status, errors, registredStatus} = props;\n  const classes = useStyles();\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      \n    {registredStatus === 'success' && <MyFlash variant=\"success\" msg={['Registred successfully, check your e-mail']}/>}\n    {status === \"errorField\" && <MyFlash variant=\"error\" msg={[errors]}/>}\n    <div className={classes.paper}>\n      <Avatar className={classes.avatar}>\n            <LockRoundedIcon/>\n          </Avatar>\n        <Typography component=\"h1\" variant=\"h5\" color=\"primary\">\n          Sign in\n        </Typography>\n        \n        <form  className={classes.form}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n            <Field\n                name=\"username\"\n                label=\"Username\"\n                type = \"text\"\n                component={renderField}\n            />\n            </Grid>\n            <Grid item xs={12}>\n            <Field\n              name=\"password\"\n              type=\"password\"\n              component={renderField}\n              rows='1'\n              label=\"Password\"\n            />\n            </Grid>\n            <Grid item xs={12}>\n              <Button  onClick={handleSubmit} className={classes.submit} fullWidth variant=\"contained\" type=\"submit\" color=\"primary\" name=\"submit\" value=\"ok\" >Submit</Button>\n            </Grid>\n          </Grid>\n        </form>   \n        <Grid container justify=\"flex-end\">\n          <Grid item xs>\n              <Link to=\"/forgotPassword\"  style={{textDecoration: 'none', color:'#3f51b5'}}>\n                  Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link to=\"/register\" style={{textDecoration: 'none', color:'#3f51b5'}}>\n                  Don't have an account? Sign Up\n              </Link>\n            </Grid>\n          </Grid>\n      </div>\n    </Container>\n  );\n}\n\nexport default Login;","import Login from '../../components/Login';\nimport {LoginAction} from '../../actions/loginAction';\nimport {connect} from \"react-redux\";\nimport {reduxForm} from 'redux-form';\n\nconst validate = (values) => {\n    const errors = {};\n    const requiredFields = [\n        'username',\n        'password',\n    ];\n    requiredFields.forEach(field => {\n        if (!values[field] || !values[field].trim()) {\n            errors[field] = 'Required !';\n        }\n    });\n    return errors;\n}\n\nconst mapStateToProps = (state) => (\n{\n    \"form\" : state.form,\n    \"status\" : state.login.status,\n    \"errors\": state.login.error,\n    \"token\" : state.user,\n    \"registredStatus\": state.register.registerStatus,\n});\nconst mapDispatchToProps = {\n    \"loginAction\": LoginAction\n};\nconst mergeProps = (stateProps, dispatchProps, otherProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    ...otherProps,\n    \"handleSubmit\" : otherProps.handleSubmit((form) => {\n        dispatchProps.loginAction(form);\n    })\n});\n\nconst connectedLoginContainer = connect(mapStateToProps, mapDispatchToProps,mergeProps)(Login);\n\nconst LoginContainer = reduxForm({\n    form : \"login\",\n    \"destroyOnUnmount\": true,\n    validate,\n})(connectedLoginContainer);\n\nexport default LoginContainer;","export const LOGIN_USER = \"LOGIN_USER\";\n\nexport const LOGIN_USER_SUCCESS = \"LOGIN_USER_SUCCESS\";\n\nexport const LOGIN_USER_ERROR = \"LOGIN_USER_ERROR\";\n\nexport const LOGIN_USER_ERROR_FIELD = \"LOGIN_USER_ERROR_FIELD\";\n\n\nexport const LoginAction = (dataInsc) => ({\n  \"type\": LOGIN_USER,\n  \"data\": dataInsc\n});\n\nexport const loginUserSuccess = () => ({\n    \"type\": LOGIN_USER_SUCCESS,\n});\n\nexport const loginError = (error) => ({\n    \"type\": LOGIN_USER_ERROR,\n    error\n});\n\nexport const loginErrorField = (errorField) => ({\n    \"type\": LOGIN_USER_ERROR_FIELD,\n    errorField\n});","import React from 'react'\nimport img from '../../image/404.png';\nconst NotFoundPage = () => {\n    return (\n        <img src={img} style={{width: '97%', height: '100%'}} alt=\"NotFoundPage\"/>\n    )\n}\nexport default NotFoundPage\n","export const RESET_PASSWORD = \"RESET_PASSWORD\";\n\nexport const RESET_PASSWORD_SUCCESS = \"RESET_PASSWORD_SUCCESS\";\n\nexport const RESET_PASSWORD_ERROR = \"RESET_PASSWORD_ERROR\";\n\nexport const SEND_EMAIL = \"SEND_EMAIL\";\n\nexport const SEND_EMAIL_SUCCESS = \"SEND_EMAIL_SUCCESS\";\n\nexport const SEND_EMAIL_ERROR = \"SEND_EMAIL_ERROR\";\n\nexport const SendEmail = (data) => ({\n  \"type\": SEND_EMAIL,\n  \"data\": data\n});\n\nexport const SendEmailSuccess = () => ({\n    \"type\": SEND_EMAIL_SUCCESS,\n});\n\nexport const SendEmailError = (error) => ({\n    \"type\": SEND_EMAIL_ERROR,\n    error\n});\n\nexport const ResetPasswordAction = (dataInsc) => ({\n  \"type\": RESET_PASSWORD,\n  \"data\": dataInsc\n});\n\nexport const ResetPasswordSuccess = () => ({\n    \"type\": RESET_PASSWORD_SUCCESS,\n});\n\nexport const ResetPasswordError =  (error) => ({\n    \"type\": RESET_PASSWORD_ERROR,\n    error\n});","import React from 'react';\nimport {Field} from 'redux-form';\nimport Avatar from '@material-ui/core/Avatar';\nimport SendTwoToneIcon from '@material-ui/icons/SendTwoTone';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport MyFlash from '../commun/flash'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport renderField from '../commun/TextField';\nconst useStyles = makeStyles(theme => ({\n \n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  \n  form: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: theme.palette.secondary.main\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n \n}));\n\n\nconst ForgotPassword = (props) => {\n  const classes = useStyles();\n    const {handleSubmit, status, errors} = props;\n    return (\n     <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      {status === \"success\" && <MyFlash variant=\"success\" msg={['Please check your e-mail']}/>}\n      {status === \"error\" && <MyFlash variant=\"error\" msg={[errors]}/>}\n      {status !== 'loading' && <div className={classes.paper}> \n      <Avatar className={classes.avatar}>\n            <SendTwoToneIcon/>\n      </Avatar>\n        <Typography component=\"h1\" variant=\"h5\" color=\"primary\">\n          Send reset link\n        </Typography>\n        <form  className={classes.form}>\n            <Grid item xs={12}>\n              <Field\n                  name=\"email\"\n                  component={renderField}\n                  label=\"Email\"\n                  type = \"email\"\n                  rows='1'\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n            <Button  className={classes.submit} fullWidth variant=\"contained\" type=\"submit\" color=\"primary\" onClick={handleSubmit}>Submit</Button>\n            </Grid>\n        </form>\n      </div>}\n\n      {status === \"loading\" && <div className={classes.paper} style={{marginTop: \"300px\"}}><CircularProgress color=\"secondary\" /></div>}\n\n    </Container>\n    )\n  }\n\n  export default ForgotPassword;","import {SendEmail} from '../../actions/resetPasswordAction'\nimport {connect} from \"react-redux\";\nimport {reduxForm} from 'redux-form';\nimport ForgotPassword from '../../components/SendEmail'\n\n\nconst validate = (values) => {\n    const errors = {};\n\n    const requiredFields = [\n        'email'\n      ];\n      requiredFields.forEach(field => {\n        if (!values[field]) {\n          errors[field] = 'Required!';\n        }\n      });\n\n    if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = \"Invalid email address\";\n    }\n    return errors;\n}\n\nconst mapStateToProps = (state) => (\n{\n    \"form\" : state.form,\n    \"status\" : state.resetPassword.status,\n    \"errors\" : state.resetPassword.errors\n});\nconst mapDispatchToProps = {\n    \"sendEmail\": SendEmail\n};\nconst mergeProps = (stateProps, dispatchProps, otherProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    ...otherProps,\n    \"handleSubmit\" : otherProps.handleSubmit((form) => {\n        dispatchProps.sendEmail(form);\n    })\n});\n\nconst cnForgotPasswordContainer = connect(mapStateToProps, mapDispatchToProps,mergeProps)(ForgotPassword);\n\nconst ForgotPasswordContainer = reduxForm ({\n    form: 'ForgotPassword',\n    validate\n}) (cnForgotPasswordContainer);\n\nexport default ForgotPasswordContainer;","import React  from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport { Link } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n}));\n\nconst EmailConfirmation = (props) => {\n  const classes = useStyles();\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n\n    {props.status !== 'loading' && <div className={classes.paper}>\n        <Typography variant=\"h4\" color=\"primary\">\n          Email confirmation\n        </Typography>\n        {props.status === 'error' && <Typography variant=\"h6\" color=\"error\">\n          <ErrorIcon /> There was an error, please retry.\n        </Typography>}\n        {props.status === 'success' && <Typography variant=\"h6\" color=\"inherit\">\n          <CheckCircleIcon /> Email verified successfully.\n          <br/>\n          You can now <Link to=\"/login\"  style={{textDecoration: 'none', color:'#3f51b5'}}>Login</Link>\n        </Typography>}\n      </div>}\n      {props.status === \"loading\" && <div className={classes.paper} style={{marginTop: \"300px\"}}><CircularProgress color=\"secondary\" /></div>}\n    </Container>\n  );\n}\n\nexport default EmailConfirmation;","import React, { Component } from 'react';\nimport EmailConfirmation from '../../components/emailConfirmation';\nimport {EmailConfirmationAction} from '../../actions/registerAction';\nimport {connect} from \"react-redux\";\n\nclass EmailConfirmCont extends Component {\n    componentDidMount = () => {\n        const token = this.props.match.params.token;\n        this.props.emailConfirm(token);\n    }\n    render() {\n        return (\n            <EmailConfirmation status={this.props.status} />\n        )\n    }\n}\n\nconst mapStateToProps = (state) => (\n{\n    \"status\" : state.register.emailConfirmation,\n});\nconst mapDispatchToProps = {\n    \"emailConfirmation\": EmailConfirmationAction\n};\nconst mergeProps = (stateProps, dispatchProps, otherProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    ...otherProps,\n    \"emailConfirm\" : function (token) {\n        dispatchProps.emailConfirmation(token);\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps,mergeProps)(EmailConfirmCont);","import React  from 'react';\nimport { Field} from 'redux-form';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Avatar from '@material-ui/core/Avatar';\nimport LockRoundedIcon from '@material-ui/icons/LockRounded';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MyFlash from '../commun/flash'\nimport renderField from '../commun/TextField';\nconst useStyles = makeStyles(theme => ({\n  \n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: theme.palette.secondary.main\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n}));\n\n\n\nconst ResetPassword = (props) => {\n    const {handleSubmit, status, resetPasswordStatus, resetError} = props;\n    const classes = useStyles();\n\n    return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n    {resetPasswordStatus === \"success\" && <MyFlash variant=\"success\" msg={['Your password has been reset successfully! You will be redirected to login']}/>}\n    {resetPasswordStatus === \"error\" && <MyFlash variant=\"error\" msg={[resetError+' You will be redirected to login']}/>}\n    {status !== \"loading\" &&\n    <div className={classes.paper}>\n      <Avatar className={classes.avatar}>\n            <LockRoundedIcon/>\n          </Avatar>\n        <Typography component=\"h1\" variant=\"h5\" color=\"primary\">\n          Reset password\n        </Typography>\n        <form  className={classes.form}>\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <Field\n                        name=\"password\"\n                        component={renderField}\n                        label=\"Password\"\n                        type=\"password\"\n                        rows='1'\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <Field\n                        name=\"confirmPassword\"\n                        component={renderField}\n                        label=\"ConfirmPassword\"\n                        type=\"password\"\n                        rows='1'\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <Button  onClick={handleSubmit} className={classes.submit} fullWidth variant=\"contained\" type=\"submit\" color=\"primary\" name=\"submit\" value=\"ok\" >Submit</Button>\n                </Grid>\n            </Grid>\n        </form>    \n        \n        \n    </div>}\n    {status === \"loading\" && <div className={classes.paper} style={{marginTop: \"300px\"}}><CircularProgress color=\"secondary\" /></div>}\n      \n    </Container>\n    );\n}\n\nexport default ResetPassword;","import ResetPassword from '../../components/resetPassword';\nimport {ResetPasswordAction} from '../../actions/resetPasswordAction';\nimport {connect} from \"react-redux\";\nimport {reduxForm} from 'redux-form';\n\nconst validate = (values) => {\n    const errors = {};\n    const requiredFields = [\n        'password',\n        'confirmPassword',\n    ];\n\n    requiredFields.forEach(field => {\n        if (!values[field] || !values[field].trim()) {\n            errors[field] = 'Required !';\n        }\n    });\n\n    if(values.password && !/\\d/.test(values.password))\n        errors.password = \"Password must contain a number !\"\n    else if(values.password && !/[A-Z]/.test(values.password))\n        errors.password = \"Password must contain an uppercase letter !\"\n    else if(values.password && !/[a-z]/.test(values.password))\n        errors.password = \"Password must contain a lowercase letter !\"\n    else if(values.password && !/[ !@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]/.test(values.password))\n        errors.password = \"Password must contain a special character !\"\n    else if(values.password && !/[a-zA-Z0-9 !@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/? ]{8,20}/.test(values.password))\n        errors.password = \"Password must contain 8-20 characters !\"\n    if(values.confirmPassword && values.password !== values.confirmPassword)\n        errors.confirmPassword = \"Passwords does not match !\"\n    return errors;\n}\n\nconst mapStateToProps = (state) => (\n{\n    \"form\" : state.form,\n    \"status\" : state.resetPassword.status,\n    \"resetPasswordStatus\": state.resetPassword.status,\n    \"resetError\": state.resetPassword.error\n});\nconst mapDispatchToProps = {\n    \"resetPasswordAction\": ResetPasswordAction\n};\nconst mergeProps = (stateProps, dispatchProps, otherProps) => ({\n    ...stateProps,\n    ...dispatchProps,\n    ...otherProps,\n    \"handleSubmit\" : otherProps.handleSubmit((form) => {\n        const token = otherProps.match.params.token;\n        const data = {form, token}\n        dispatchProps.resetPasswordAction(data);\n    })\n});\n\nconst connectedResetPasswordContainer = connect(mapStateToProps, mapDispatchToProps,mergeProps)(ResetPassword);\nconst ResetPasswordContainer = reduxForm({\n    form : \"resetPassword\",\n    \"destroyOnUnmount\": true,\n    validate,\n})(connectedResetPasswordContainer);\n\nexport default ResetPasswordContainer;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport StarIcon from '@material-ui/icons/Star';\nimport SearchSharpIcon from '@material-ui/icons/SearchSharp';\nimport FilterListSharpIcon from '@material-ui/icons/FilterListSharp';\nimport Fab from '@material-ui/core/Fab';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport TextField from '@material-ui/core/TextField';\nimport CardContent from '@material-ui/core/CardContent';\nimport Select from 'react-select';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Slider from '@material-ui/core/Slider';\nimport './home.css'\n\nconst useStyles = makeStyles(theme => ({\n    upBtn : {\n        zIndex: 99,\n        position: 'fixed',\n        bottom: '7%',\n        right: '1%',\n    },\n    rating: {\n        maxWidth:400\n    },\n}));\n\nexport default function Home(props) {\n    const {movies} = props;\n    const classes = useStyles();\n    const [filter, setFilter] = React.useState(false);\n    const [search, setSearch] = React.useState(false);\n    return(\n        <>\n            <Grid className=\"filterCont\" container justify=\"center\" direction=\"row\">\n                \n                    <Tooltip title=\"Search\">\n                        <IconButton aria-label=\"Search\" onClick={() => {setSearch(!search); filter && setFilter(!filter)}}>\n                            <SearchSharpIcon className=\"searchButton\" color=\"primary\" fontSize=\"large\"/>\n                        </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Filter\">\n                        <IconButton aria-label=\"Filter\" onClick={() => {search && setSearch(!search); setFilter(!filter)}}>\n                            <FilterListSharpIcon className=\"filterButton\" color=\"primary\" fontSize=\"large\"/>\n                        </IconButton>\n                    </Tooltip>\n            </Grid>\n            <Grid className=\"filterCont\" container alignContent=\"center\" direction=\"column\">\n                {search &&\n                <Grid item xs={12}>\n                    <TextField\n                        placeholder=\"Find a movie ...\"\n                    />\n                </Grid>}\n                {filter &&\n                <Grid item xs={12}>\n                    <CardContent>\n                        <Grid container justify=\"center\" spacing={2} xs={12}>\n                            <Grid item xs={6} className={classes.rating}>\n                                <Tooltip title =\"DESC\">\n                                    <IconButton aria-label=\"View\"  >\n                                        <KeyboardArrowDownIcon  color=\"primary\"/>\n                                    </IconButton>\n                                </Tooltip>\n                                <Tooltip title =\"ASC\">\n                                    <IconButton aria-label=\"View\"  >\n                                        <ExpandLessIcon  color=\"primary\"/>\n                                    </IconButton>\n                                </Tooltip>\n                                <Typography id=\"range-slider1\" gutterBottom align=\"center\">\n                                    Rating\n                                </Typography>\n                                <Slider\n                                    //value={rating}\n                                    //onChange={handleChangeRating}\n                                    valueLabelDisplay=\"auto\"\n                                    aria-labelledby=\"range-slider\"\n                                    step={0.2}\n                                    //marks={marks}\n                                    min={0}\n                                    max={10}\n                                />\n                            </Grid>\n                            <Grid item xs={6} className={classes.rating}>\n                                <Tooltip title =\"DESC\">\n                                    <IconButton aria-label=\"View\" >\n                                        <KeyboardArrowDownIcon  color=\"primary\"/>\n                                    </IconButton>\n                                </Tooltip>\n                                <Tooltip title =\"ASC\">\n                                    <IconButton aria-label=\"View\">\n                                        <ExpandLessIcon  color=\"primary\"/>\n                                    </IconButton>\n                                </Tooltip>\n                                <Typography id=\"range-slider2\" gutterBottom align=\"center\">\n                                    Production year\n                                </Typography>\n                                <Slider\n                                    //value={age}\n                                    //onChange={handleChangeAge}\n                                    valueLabelDisplay=\"auto\"\n                                    aria-labelledby=\"range-slider\"\n                                    step={1}\n                                    min={1910}\n                                    max={2020}\n                                />\n                            </Grid>\n                            <Grid item xs={12} className={classes.rating}>\n                                \n                                <Typography id=\"range-slider5\" gutterBottom align=\"center\">\n                                    Category\n                                </Typography>\n                                <Select\n                                    isClearable={false}\n                                    //onChange={handleChangeTags}\n                                    options={[{'label': 'Action', 'label' : 'Animation'}]}\n                                    //styles={customStyles}\n                                    placeholder=\"Select a category\"\n                                />\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                </Grid>}\n            </Grid>\n            <Grid container justify=\"center\">\n                <Fab    className={classes.upBtn}\n                        color=\"primary\"\n                        size=\"medium\"\n                        onClick={() => {document.documentElement.scrollTop = 0}}\n                >\n                    <KeyboardArrowUpIcon />\n                </Fab>\n                {movies.movies && movies.movies.map((element, index) =>  (\n                <React.Fragment key={index}>\n                {((element.medium_cover_image) || (element.images.poster && element.images.poster !== 'N/A' && element.images.poster !== 'images/posterholder.png')) &&\n                <Card className=\"card\">\n                    <div className=\"container\">\n                        <img\n                            className=\"media\"\n                            src={(element.medium_cover_image && 'https://img.'+element.medium_cover_image.split('https://')[1] )|| (element.images.poster)} \n                            alt={element.title_long || element.title}\n                        />\n                        <div className=\"overlay\">\n                            <div className=\"text\">\n                                <h1>{element.title_long || element.title + (element.year && ` (${element.year})`)}</h1>\n                                <Typography component=\"legend\">\n                                    <StarIcon style={{fill: 'yellow'}}/>({\n                                    (element.rating.percentage && (element.rating.percentage * 10 / 100).toFixed(1)) || \n                                    (element.rating && (element.rating * 1).toFixed(1))}/10)\n                                </Typography>\n                            </div>\n                        </div>\n                    </div>\n                </Card>\n                }\n                </React.Fragment>\n                ))}\n            </Grid>\n        \n        </>\n    );\n}","export const GET_MOVIES = \"GET_MOVIES\";\nexport const GET_MOVIES_SUCCESS = \"GET_MOVIES_SUCCESS\";\nexport const GET_MOVIES_ERROR = \"GET_MOVIES_ERROR\";\n\nexport const GetMovies = (indice) => ({\n    \"type\":  GET_MOVIES,\n    indice,\n});\n\nexport const GetMoviesSuccess = (data) => ({\n    \"type\":  GET_MOVIES_SUCCESS,\n    data: data,\n});\n\nexport const GetMoviesError = (error) => ({\n    \"type\":  GET_MOVIES_ERROR,\n    error: error,\n});","import React, {useEffect, useState} from 'react'\nimport {connect} from \"react-redux\";\nimport Home from \"../../components/Home\";\nimport {GetMovies} from '../../actions/moviesAction';\n\nconst HomeContainer = (props) => {\n    const {movies, getMovies} = props;\n    const [page, setPage] = useState(1);\n    // const [page, setPage] = useState({\n    //     page: 1\n    // });\n    useEffect(() => {\n        getMovies(page);\n        setPage(page + 1);\n    }, []);\n    window.onscroll = function(ev) {\n        if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight) {\n            if(movies.status === 'success'){\n                getMovies(page);\n                setPage(page + 1);\n            }\n        }\n    };\n    return (\n        <div>\n            <Home movies={movies} />\n        </div>\n    )\n}\nconst mapStateToProps = (state) => (\n{\n    \"user\": state.user,\n    \"movies\": state.movies,\n});\nconst mapDispatchToProps = {\n    \"getMovies\" : GetMovies,\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(HomeContainer);","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {Route, Switch} from 'react-router-dom';\nimport RegisterContainer from '../containers/Register';\nimport loginContainer from '../containers/Login';\nimport NotFoundPage from '../components/NotFoundPage';\nimport ForgotPasswordContainer from '../containers/sendEmail';\nimport EmailConfirmCont from '../containers/emailConfirmation';\nimport ResetPasswordContainer from '../containers/resetPassword';\nimport HomeContainer from '../containers/Home';\n\nconst Routes = () => {\n    return (\n        <>\n            <Switch>\n                <Route exact path=\"/confirmation/:token\"  component={EmailConfirmCont}/>\n                <Route exact path=\"/resetPassword/:token\"  component={ ResetPasswordContainer}/>\n                <Route exact path=\"/forgotPassword\"  component={ ForgotPasswordContainer}/>\n                <Route exact path=\"/register\"  component={ RegisterContainer} />\n                <Route exact path=\"/login\"  component={ loginContainer}/>\n                <Route exact path=\"/\"  component={ HomeContainer}/>\n                <Route path=\"\" component={NotFoundPage}/>\n            </Switch>\n        </>\n    )\n}\nconst mapStateToProps = (state) => (\n{\n    'user': state.user,\n});\nexport default connect(mapStateToProps)(Routes);","import React from 'react';\nimport NavBar from '../src/containers/Navbar';\nimport Footer from '../src/components/Footer';\nimport Routes from './Routes/Routes';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Routes />\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }","import {takeLatest, put,delay} from \"redux-saga/effects\";\nimport {push} from \"react-router-redux\";\nimport {resetState} from '../actions/resetStateAction';\nimport {inscriptionError, inscriptionUserSuccess, EmailConfirmationSuccess, EmailConfirmationError} from \"../actions/registerAction\";\nimport axios from 'axios'\n\nconst inscription =\n  function *inscription ({data}) {\n    try {\n    \n      const response = yield axios.post('http://localhost:5000/register', data)\n      if(response.data.isValid){\n        yield put(inscriptionUserSuccess(data));\n        yield put(push(\"/login\"));\n      }\n      else{\n        if(response.data.errUsername && !response.data.errEmail){\n          yield put(inscriptionError(response.data.errUsername));\n        }\n        else if(response.data.errEmail && !response.data.errUsername){\n          yield put(inscriptionError(response.data.errEmail));\n        }\n        else\n          yield put(inscriptionError('Username and email already exist'));\n      }\n      yield delay(4000);\n      yield put(resetState());\n    }catch (error) {\n      if (error.response) {\n        yield put(inscriptionError(\"error.response.statusText\", \"error.response.status\"));\n      }\n    }\n  };\n\nconst emailConfirm =\nfunction *emailConfirm ({token}) {\n  try {\n    const response = yield axios.post('http://localhost:5000/confirmEmail', {token});\n    if(response.data === 'success')\n    {\n      yield put(EmailConfirmationSuccess());\n    }\n    else if(response.data === 'error')\n    {\n      yield put(EmailConfirmationError());\n    }\n  }catch (error) {\n      if (error.response) {\n        yield put(EmailConfirmationError());\n      }\n    }\n};\n\nexport default function *() {\n  yield takeLatest(\"INSCRIPTION_USER\", inscription);\n  yield takeLatest(\"EMAIL_CONFIRMATION\", emailConfirm);\n}","export const RESET_STATE = \"RESET_STATE\";\n\nexport const RESET_CHAT_STATE = \"RESET_CHAT_STATE\";\n\nexport const RESET_NOTIF_STATE = \"RESET_NOTIF_STATE\";\n\nexport const RESET_STATE_USERS = \"RESET_STATE_USERS\";\n\nexport const resetState = () => ({\n    \"type\": RESET_STATE\n});\n\nexport const resetStateUsers= () => ({\n    \"type\": RESET_STATE_USERS\n});\nexport const resetChatState = () => ({\n    \"type\": RESET_CHAT_STATE\n});\nexport const resetNotifState = () => ({\n    \"type\": RESET_NOTIF_STATE\n});","export const UPDATE_USER_SUCCESS = \"UPDATE_USER_SUCCESS\";\nexport const GET_USERS = \"GET_USERS\";\nexport const GET_USERS_SUCCESS = \"GET_USERS_SUCCESS\";\nexport const GET_USERS_ERROR = \"GET_USERS_ERROR\";\nexport const BLOCK_USER = \"BLOCK_USER\";\nexport const DEBLOCK_USER = \"DEBLOCK_USER\";\nexport const DELETE_USER = \"DELETE_USER\";\nexport const DELETE_BLOCK= \"DELETE_BLOCK\";\nexport const DELETE_LIKE= \"DELETE_LIKE\";\nexport const LIKE_USER = \"LIKE_USER\";\nexport const DISLIKE_USER = \"DISLIKE_USER\";\nexport const DISLIKE_USER_ACT = \"DISLIKE_USER_ACT\";\nexport const REPORT_USER = \"REPORT_USER\";\nexport const VIEW_PROFILE_USER = \"VIEW_PROFILE_USER\";\nexport const GET_BLOCK_USER = \"GET_BLOCK_USER\";\nexport const GET_BLOCK_USER_SUCCESS = \"GET_BLOCK_USER_SUCCESS\";\nexport const GET_LIKE_USER = \"GET_LIKE_USER\";\nexport const GET_LIKE_USER_SUCCESS = \"GET_LIKE_USER_SUCCESS\";\nexport const SORT_USERS = \"SORT_USERS\";\nexport const GET_VP_LIST = \"GET_VP_LIST\";\nexport const GET_VP_LIST_SUCCESS = \"GET_VP_LIST_SUCCESS\";\nexport const GET_LIKED_BY = \"GET_LIKED_BY\";\nexport const GET_LIKED_BY_SUCCESS = \"GET_LIKED_BY_SUCCESS\";\n\nexport const updateUserSuccess = (data) => ({\n    \"type\":  UPDATE_USER_SUCCESS,\n    data\n});\n\nexport const getUsers= (filtre,indice) => ({\n    \"type\":  GET_USERS,\n    filtre: filtre,\n    indice: indice\n});\nexport const getUsersSuccess= (data) => ({\n    \"type\":  GET_USERS_SUCCESS,\n    data\n});\nexport const getUsersError= (err) => ({\n    \"type\":  GET_USERS_ERROR,\n    err\n});\nexport const blockUser= (blocked_user_id) => ({\n    \"type\":  BLOCK_USER,\n    blocked_user_id\n});\nexport const deblockUser= (deblocked_user_id) => ({\n    \"type\":  DEBLOCK_USER,\n    deblocked_user_id\n});\nexport const getBlockUser= () => ({\n    \"type\":  GET_BLOCK_USER,\n});\nexport const getBlockUserSuccess= (data) => ({\n    \"type\":  GET_BLOCK_USER_SUCCESS,\n    data\n});\nexport const likeUser= (liked_user_id) => ({\n    \"type\":  LIKE_USER,\n  liked_user_id\n});\nexport const dislikeUser= (dislike_user_id) => ({\n    \"type\":  DISLIKE_USER,\n    dislike_user_id\n});\nexport const dislikeUserAct= (dislike_user_id) => ({\n    \"type\":  DISLIKE_USER_ACT,\n    dislike_user_id\n});\nexport const getLikeUser= () => ({\n    \"type\":  GET_LIKE_USER,\n});\nexport const getLikeUserSuccess= (data) => ({\n    \"type\":  GET_LIKE_USER_SUCCESS,\n    data\n});\nexport const deleteLike= (id) => ({\n    \"type\":  DELETE_LIKE,\n    id : id\n});\nexport const deleteBlock= (id) => ({\n    \"type\":  DELETE_BLOCK,\n    id : id\n});\nexport const deleteUser= (id) => ({\n    \"type\":  DELETE_USER,\n    id: id,\n});\n\nexport const reportUser= (reported_user_id) => ({\n    \"type\":  REPORT_USER,\n  reported_user_id\n});\n\nexport const viewProfileUser= (viewed_user_id) => ({\n    \"type\":  VIEW_PROFILE_USER,\n    viewed_user_id\n});\nexport const sortUsers= (methode,route,indice) => ({\n    \"type\":  SORT_USERS,\n    methode,\n    route,\n    indice\n});\nexport const getViewProfileList= () => ({\n    \"type\":  GET_VP_LIST,\n});\nexport const getViewProfileListSuccess= (data) => ({\n    \"type\":  GET_VP_LIST_SUCCESS,\n    data\n});\nexport const getLikedBy= () => ({\n    \"type\":  GET_LIKED_BY,\n});\nexport const getLikedBySuccess= (data) => ({\n    \"type\":  GET_LIKED_BY_SUCCESS,\n    data\n});","import axios from \"axios\";\n\nexport const request = (config, token)=> {\n\n  const responsePromise = axios({\n    ...config,\n    //\"headers\": {\"Authorization\": token},\n  });\n  return responsePromise;\n};","import {takeLatest, put,call,delay} from \"redux-saga/effects\";\nimport {push} from \"react-router-redux\";\nimport {resetState} from '../actions/resetStateAction';\nimport {loginError, loginUserSuccess,loginErrorField} from \"../actions/loginAction\";\nimport {updateUserSuccess} from '../actions/userAction'\nimport {request} from './helper';\nimport socket from '../socketConn';\n\nconst login =\n  function *login ({data}) {\n    try {\n    const username = data.username;\n    const password = data.password;\n      const response = yield call(request, {\n        \"url\": \"http://localhost:5000/login\",\n        \"data\": {\n          username,\n          password\n        },\n        \"method\": \"post\"\n      });\n     \n      if(response.data.isValid)\n      {\n        const  user = response.data.user;\n        yield put(loginUserSuccess());\n        yield put(updateUserSuccess(user));\n        \n        socket.emit('join', {id: user.id});\n        yield put(push(\"/home\"));\n      }\n      else\n      {\n        yield put(loginErrorField(response.data.errorField))\n        yield delay(4000);\n        yield put(resetState());\n      }\n    }catch (error) {\n      if (error.response) {\n        yield put(loginError(\"error.response.statusText\", \"error.response.status\"));\n      }\n    }\n  };\n\nexport default function *() {\n  yield takeLatest(\"LOGIN_USER\", login);\n}","import {ClearUserInformation } from \"../actions/logoutAction\";\nimport { takeLatest, put,select,call} from \"redux-saga/effects\";\nimport {push} from \"react-router-redux\";\nimport {request} from './helper';\nexport const logoutRequest =\n    function *logoutRequest () {\n        try {\n            // const id = yield select((state) => state.user.id);\n            // const token = yield select((state) => state.user.token);\n            // const response = yield call(request, {\n            //     \"url\": \"http://localhost:5000/logout\",\n            //     \"data\": {\n            //      id\n            //     },\n            //     \"method\": \"post\"\n            //   },token);\n              //if(response)\n              //{\n                yield put(ClearUserInformation());\n                yield put(push(\"/login\"));\n              //}\n            \n        } catch (error) {\n            console.log(error);\n        }\n    };\n  \nexport default function *() {\n    yield takeLatest(\"LOGOUT_USER\", logoutRequest);\n}","import {takeLatest, put, delay} from \"redux-saga/effects\";\nimport {push} from \"react-router-redux\";\nimport {resetState} from '../actions/resetStateAction';\nimport { ResetPasswordSuccess, ResetPasswordError, SendEmailSuccess, SendEmailError} from \"../actions/resetPasswordAction\";\nimport axios from 'axios';\n\nconst resetPass =\n  function *resetPass ({data}) {\n    try {\n      const response = yield axios.post('http://localhost:5000/resetPassword', {token: data.token, pass: data.form.password, c_pass: data.form.confirmPassword});\n      if(response.data.reset)\n      {\n        yield put(ResetPasswordSuccess());\n      }\n      else\n      {\n        yield put(ResetPasswordError(response.data.error));\n      }\n      yield delay(4000);\n      yield put(resetState());\n      yield put(push('/login'));\n    }catch (error) {\n      if (error.response) {\n        yield put(ResetPasswordError('Error, please retry'));\n      }\n    }\n};\n\nconst sendEmailS =\nfunction *sendEmailS (data) {\n  try {\n    const response = yield axios.post('http://localhost:5000/sendResetEmail', {email: data.data.email});\n    if(response.data.sent)\n    {\n      yield put(SendEmailSuccess());\n    }\n    else if(response.data.error === 'Email not found')\n    {\n      yield put(SendEmailError('Email not found'));\n    }\n    yield delay(4000);\n    yield put(resetState());\n  }catch (error) {\n    if (error.response) {\n      yield put(SendEmailError('Error sending the email, please retry'));\n    }\n  }\n};\n\nexport default function *() {\n  yield takeLatest(\"SEND_EMAIL\", sendEmailS);\n  yield takeLatest(\"RESET_PASSWORD\", resetPass);\n}","import {takeLatest, put,call, select} from \"redux-saga/effects\";\n//import {push} from \"react-router-redux\";\n//import {resetState} from '../actions/resetStateAction';\nimport {GetMoviesError, GetMoviesSuccess} from '../actions/moviesAction';\nimport {request} from './helper';\n\nconst getMovies =\n    function *getMovies ({indice}) {\n        try {\n            // const id = yield select((state) => state.user.id);\n            // const token = yield select((state) => state.user.token);\n            const response = yield call(request, {\n                \"url\": 'http://localhost:5000/getMovies',\n                \"data\": {page:  indice},\n                \"method\": \"POST\"\n            });\n            if(response.data.length > 0){\n                let oldData = yield select ((state) => state.movies.movies)\n                let newData = response.data;\n                let data = null;\n                if(indice.indice !== 0)\n                    data = oldData.concat(newData);\n                else\n                    data = newData;\n                yield put(GetMoviesSuccess(data));\n            }\n            else\n                yield put(GetMoviesError('error'));\n        }catch (error) {\n            if (error.response) {\n                yield put(GetMoviesError(\"error.response.statusText\", \"error.response.status\"));\n            }\n        }\n    };\n\nexport default function *() {\n    yield takeLatest(\"GET_MOVIES\", getMovies);\n}","import {fork, all} from \"redux-saga/effects\";\nimport registerSaga from \"./registerSaga\";\nimport loginSaga from './loginSaga';\nimport logoutSaga from \"./logoutSaga\";\nimport resetPasswordSaga from './resetPasswordSaga';\nimport moviesSaga from \"./moviesSaga\";\n\nexport default function *() {\n  yield all([\n    fork(registerSaga),\n    fork(loginSaga),\n    fork(logoutSaga),\n    fork(resetPasswordSaga),\n    fork(moviesSaga),\n  ]);\n}","import {\n  INSCRIPTION_USER,\n  INSCRIPTION_USER_ERROR,\n  INSCRIPTION_USER_SUCCESS,\n  EMAIL_CONFIRMATION,\n  EMAIL_CONFIRMATION_SUCCESS,\n  EMAIL_CONFIRMATION_ERROR,\n} from \"../actions/registerAction\";\nimport {\n  RESET_STATE\n} from '../actions/resetStateAction';\n\nexport default function (state = '', action) {\n  switch (action.type) {\n  case INSCRIPTION_USER:\n    return {registerStatus: 'loading'};\n  case INSCRIPTION_USER_SUCCESS:\n    return {registerStatus: 'success'};\n  case INSCRIPTION_USER_ERROR:\n    return {registerStatus: 'error', error: action.error};\n  case EMAIL_CONFIRMATION:\n    return {emailConfirmation: 'loading'};\n  case EMAIL_CONFIRMATION_SUCCESS:\n    return {emailConfirmation: 'success'};\n  case EMAIL_CONFIRMATION_ERROR:\n    return {emailConfirmation: 'error'};\n    case RESET_STATE :\n      return 'initial state';\n  default:\n    return state;\n  }\n}","import {\n    LOGIN_USER,\n    LOGIN_USER_ERROR,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_ERROR_FIELD,\n} from \"../actions/loginAction\";\n\nimport { CLEAR_USER_INFORMATION } from '../actions/logoutAction'\n\nimport {\n  RESET_STATE\n} from '../actions/resetStateAction';\n\nconst DEFAULT_STATE = {\n  status: 'offline',\n  error: null\n};\n  \nexport default function (state = DEFAULT_STATE, action) {\n    switch (action.type) {\n      case LOGIN_USER:\n        return{\n          status: 'loading',\n          error:null\n        }\n      case LOGIN_USER_SUCCESS:\n\n        return {\n          status:'online',\n          error: null\n        }\n      case LOGIN_USER_ERROR:\n        return {\n          status: 'error',\n          error: action.error,\n        }\n      case LOGIN_USER_ERROR_FIELD:\n        return {\n          status: 'errorField',\n          error: action.errorField,\n        }\n      case CLEAR_USER_INFORMATION:\n        return DEFAULT_STATE\n      case RESET_STATE:\n        return 'initial state';\n      default:\n        return state;\n    }\n}","import {\n  RESET_PASSWORD,\n  RESET_PASSWORD_SUCCESS,\n  RESET_PASSWORD_ERROR,\n  SEND_EMAIL,\n  SEND_EMAIL_SUCCESS,\n  SEND_EMAIL_ERROR,\n} from \"../actions/resetPasswordAction\";\nimport {\n  RESET_STATE\n} from '../actions/resetStateAction';\nexport default function (state = '', action) {\n  switch (action.type) {\n    case RESET_PASSWORD:\n      return {status: 'loading', error: null}\n    case RESET_PASSWORD_SUCCESS:\n    return {status: 'success', error: null}\n    case RESET_PASSWORD_ERROR:\n      return {status: 'error', error: action.error}\n    case SEND_EMAIL:\n      return {status: \"loading\", errors: null}\n    case SEND_EMAIL_SUCCESS:\n      return {status: \"success\", errors: null}\n    case SEND_EMAIL_ERROR:\n      return {status: \"error\", errors: action.error}\n    case RESET_STATE:\n      return 'initial state';\n    default:\n      return state;\n  }\n}","import {\n  UPDATE_USER_SUCCESS,\n} from \"../actions/userAction\";\nimport { CLEAR_USER_INFORMATION } from '../actions/logoutAction';\n\nexport default function (state = null, action) {\n    switch (action.type) {\n      case UPDATE_USER_SUCCESS:\n        return action.data;\n      case CLEAR_USER_INFORMATION:\n        return null;\n      default:\n        return state;\n    }\n}","import {\n    GET_MOVIES,GET_MOVIES_SUCCESS,GET_MOVIES_ERROR\n} from \"../actions/moviesAction\";\n  \nconst DEFAULT_STATE = {\n    status: 'default',\n    movies: [],\n};\n\nexport default function (state = DEFAULT_STATE, action) {\n    switch (action.type) {\n        case GET_MOVIES:\n        {\n            if(action.indice === 1)\n                return {status: 'loading', movies: []};\n            else\n                return {status: 'loading2', movies: [...state.movies]};\n        }\n            \n        case GET_MOVIES_SUCCESS:\n            return {status: 'success', movies: action.data};\n        case GET_MOVIES_ERROR:\n            return {status: 'error', movies: action.error};\n        default:\n          return state;\n    }\n}","import { connectRouter } from \"connected-react-router\";\nimport registerReducer from \"./registerReducer\";\nimport loginReducer from \"./loginReducer\";\nimport {combineReducers} from \"redux\";\nimport {reducer as form} from \"redux-form\";\nimport resetPasswordReducer from \"./resetPasswordReducer\";\nimport userReducer from './userReducer';\nimport moviesReducer from './moviesReducer';\n\nconst combinedReducer = (history)=> combineReducers({\n    \"router\" : connectRouter(history),\n    \"register\" : registerReducer,\n    \"login\": loginReducer,\n    \"resetPassword\": resetPasswordReducer,\n    \"user\" : userReducer,\n    \"movies\": moviesReducer,\n    form\n});\nexport default combinedReducer;","import {applyMiddleware, compose, createStore} from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"./sagas\";\nimport rootReducer from \"./reducers\";\nimport {createBrowserHistory} from \"history\";\nimport {routerMiddleware} from \"connected-react-router\";\nimport {persistReducer} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nexport const history = createBrowserHistory();\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst persistConfig = {\n  \"key\": \"use-app\",\n  storage: storage,\n  whitelist: \"user\",\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer(history));\n\nexport default function configureStore (initialState) {\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const store = createStore(\n    persistedReducer,\n    initialState,\n    composeEnhancers(applyMiddleware(routerMiddleware(history), sagaMiddleware))\n  );\n  sagaMiddleware.run(rootSaga);\n\n  if (module.hot) {\n    module.hot.accept(\"./reducers\", () => {\n      store.replaceReducer(rootReducer(history));\n    });\n  }\n  return store;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {Provider} from 'react-redux'\n\nimport configureStore, {history} from './store'\nimport { ConnectedRouter } from 'connected-react-router';\nimport {persistStore} from \"redux-persist\";\nimport {PersistGate} from \"redux-persist/lib/integration/react\";\n\nconst  store = configureStore();\nconst persistor = persistStore(store);\nReactDOM.render(\n\n\n<Provider store = {store}>\n    <PersistGate loading={null} persistor={persistor}>\n        <ConnectedRouter history={history}>\n            <App store={store}/>\n        </ConnectedRouter>\n    </PersistGate>\n</Provider>\n\n, document.getElementById('root'));\nserviceWorker.unregister();"],"sourceRoot":""}